name: Build and deploy to develop

on:
  push:
    branches:
      - develop

jobs:
  test-and-build:
    name: Test & build
    runs-on: ubuntu-latest
    environment: develop
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: yarn

      - name: Install dependencies
        run: yarn install --pure-lockfile

      - name: Check licenses
        run: yarn license-check

      - name: GraphQL Codegen
        run: yarn graphql-codegen

      - name: Typecheck
        run: yarn typecheck

      - name: Lint
        run: yarn lint

      - name: Run tests
        run: yarn test

      - name: Compile project
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: yarn build

      - name: Configure AWS Credentials
        id: aws_credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
    
      - name: Build, tag, and push image to Amazon ECR
        id: build_tag_push
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: candosa_swan_partner_frontend
          IMAGE_TAG: develop
        run: |
          docker build \
              -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
      - name: Log out of Amazon ECR
        id: logout_ecr
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}
